# Generated by Django 3.0.8 on 2020-07-09 05:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='commentModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('postId', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='tagModel',
            fields=[
                ('tag', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='postModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=500)),
                ('postType', models.CharField(max_length=255)),
                ('parentId', models.CharField(blank=True, max_length=255, null=True)),
                ('creationDate', models.DateTimeField(default=django.utils.timezone.now)),
                ('score', models.IntegerField(default=0)),
                ('body', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='posts/')),
                ('answerCount', models.IntegerField(default=0)),
                ('commentCount', models.IntegerField(default=0)),
                ('closedDate', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('comment', models.ManyToManyField(null=True, to='posts.commentModel')),
                ('tags', models.ManyToManyField(blank=True, null=True, to='posts.tagModel')),
            ],
        ),
    ]
